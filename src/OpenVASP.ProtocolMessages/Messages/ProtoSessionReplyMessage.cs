// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ProtoSessionReplyMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenVASP.ProtocolMessages.Messages {

  /// <summary>Holder for reflection information generated from ProtoSessionReplyMessage.proto</summary>
  public static partial class ProtoSessionReplyMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for ProtoSessionReplyMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoSessionReplyMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5Qcm90b1Nlc3Npb25SZXBseU1lc3NhZ2UucHJvdG8SEXByb3RvYnVmX29w",
            "ZW52YXNwGhNQcm90b1Zhc3BJbmZvLnByb3RvGhJQcm90b01lc3NhZ2UucHJv",
            "dG8iowEKGFByb3RvU2Vzc2lvblJlcGx5TWVzc2FnZRIwCgdtZXNzYWdlGAEg",
            "ASgLMh8ucHJvdG9idWZfb3BlbnZhc3AuUHJvdG9NZXNzYWdlEg8KB3RvcGlj",
            "X2IYAiABKAkSDwoHY29tbWVudBgDIAEoCRIzCgl2YXNwX2luZm8YBCABKAsy",
            "IC5wcm90b2J1Zl9vcGVudmFzcC5Qcm90b1Zhc3BJbmZvQiWqAiJPcGVuVkFT",
            "UC5Qcm90b2NvbE1lc3NhZ2VzLk1lc3NhZ2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::OpenVASP.ProtocolMessages.Messages.ProtoVaspInfoReflection.Descriptor, global::OpenVASP.ProtocolMessages.Messages.ProtoMessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenVASP.ProtocolMessages.Messages.ProtoSessionReplyMessage), global::OpenVASP.ProtocolMessages.Messages.ProtoSessionReplyMessage.Parser, new[]{ "Message", "TopicB", "Comment", "VaspInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProtoSessionReplyMessage : pb::IMessage<ProtoSessionReplyMessage> {
    private static readonly pb::MessageParser<ProtoSessionReplyMessage> _parser = new pb::MessageParser<ProtoSessionReplyMessage>(() => new ProtoSessionReplyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoSessionReplyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenVASP.ProtocolMessages.Messages.ProtoSessionReplyMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSessionReplyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSessionReplyMessage(ProtoSessionReplyMessage other) : this() {
      message_ = other.message_ != null ? other.message_.Clone() : null;
      topicB_ = other.topicB_;
      comment_ = other.comment_;
      vaspInfo_ = other.vaspInfo_ != null ? other.vaspInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSessionReplyMessage Clone() {
      return new ProtoSessionReplyMessage(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::OpenVASP.ProtocolMessages.Messages.ProtoMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenVASP.ProtocolMessages.Messages.ProtoMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "topic_b" field.</summary>
    public const int TopicBFieldNumber = 2;
    private string topicB_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TopicB {
      get { return topicB_; }
      set {
        topicB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 3;
    private string comment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vasp_info" field.</summary>
    public const int VaspInfoFieldNumber = 4;
    private global::OpenVASP.ProtocolMessages.Messages.ProtoVaspInfo vaspInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenVASP.ProtocolMessages.Messages.ProtoVaspInfo VaspInfo {
      get { return vaspInfo_; }
      set {
        vaspInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoSessionReplyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoSessionReplyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      if (TopicB != other.TopicB) return false;
      if (Comment != other.Comment) return false;
      if (!object.Equals(VaspInfo, other.VaspInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (message_ != null) hash ^= Message.GetHashCode();
      if (TopicB.Length != 0) hash ^= TopicB.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (vaspInfo_ != null) hash ^= VaspInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (message_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (TopicB.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TopicB);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (vaspInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(VaspInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (TopicB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicB);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (vaspInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VaspInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoSessionReplyMessage other) {
      if (other == null) {
        return;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::OpenVASP.ProtocolMessages.Messages.ProtoMessage();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.TopicB.Length != 0) {
        TopicB = other.TopicB;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.vaspInfo_ != null) {
        if (vaspInfo_ == null) {
          VaspInfo = new global::OpenVASP.ProtocolMessages.Messages.ProtoVaspInfo();
        }
        VaspInfo.MergeFrom(other.VaspInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (message_ == null) {
              Message = new global::OpenVASP.ProtocolMessages.Messages.ProtoMessage();
            }
            input.ReadMessage(Message);
            break;
          }
          case 18: {
            TopicB = input.ReadString();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
          case 34: {
            if (vaspInfo_ == null) {
              VaspInfo = new global::OpenVASP.ProtocolMessages.Messages.ProtoVaspInfo();
            }
            input.ReadMessage(VaspInfo);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
